'=======================================================================================
'Unifloc7.3  Testudines                                           khabibullinra@gmail.com
'Библиотека расчетных модулей по нефтяному инжинирингу
'2000 - 2018 г
'
'=======================================================================================
'
Option Explicit
'  класс для описания характеристик роторного газосепаратора УЭЦН
'  класс работает с расчетом сепарации вообще - при необходимости описывает входной модуль
'
' геометрические параметры насоса
Private p_Length_m As Double                ' длина должна быть не нулевая, для того чтобы корректно строились графики по скважине
Private p_HmesTop As Double                 ' глубина установки газосепаратора по верхней части
Private p_OD_mm As Double                   ' внешний диаметр
Private p_Angle_deg As Double               ' угол установки УЭЦН (предполагается, что по глубине угол не меняется)
Private p_Dcas_m As Double                  ' диаметр эксплуатационной колонны в месте установки сепаратора
Private p_Qnom_m3day                        ' номинальный дебит для газосепаратора
Private c_PCurve As New TInterpolation      ' кривая распределения давления вдоль насоса   (как снаружи, так и внутри)
Private c_TCurve As New TInterpolation      ' кривая распределения температуры флюида вдоль насоса
' общие параметры
Private p_Fluid As CPVT                     ' флюид исходный
Private p_FluidTub As CPVT                  ' флюид после сепарации
Private p_FluidCas As CPVT                  ' флюид после сепарации - то что идет в затруб
Private p_isKsepManual As Boolean           ' флаг для ручного учета газосепаратора
 ' параметры сепарации, расчетные значения
Private p_KsepNatural As Double
Private p_KsepGasSep_d As Double
Private p_KsepTotal_d  As Double
 
Private p_KsepGSMax  As Double
Private p_QmixGS_rc_m3day As Double
Private p_M_Nm As Double                    ' момент потребляемый
Private p_Pshaft_w As Double                ' мощность потребляемая
Private p_Pshaftnom_w As Double             ' номинальная мощность потребляемая газосепаратором
Private p_w_rpm As Double                   ' скорость вращения вала
Private p_fnom_Hz As Double                 ' номинальная скорость вращения газосепаратора
 
' свойство для выдачи момента
Public Property Get M_Nm() As Double
   M_Nm = p_M_Nm
   M_Nm = p_Pshaft_w / w_radsec
End Property
Public Property Get w_radsec() As Double
   w_radsec = p_w_rpm / 60 * 2 * const_Pi
End Property
Public Property Get w_rpm() As Double
   w_rpm = p_w_rpm
End Property
' свойство выдает сумарную кривую по давлениям
Public Property Get PCurve() As TInterpolation
   Set PCurve = c_PCurve
End Property
Public Property Get TCurve() As TInterpolation
    Set TCurve = c_TCurve
End Property
Public Property Get Dcas_m() As Double
    Dcas_m = p_Dcas_m
End Property
'Public Property Get Dintake_m() As Double
'    Dintake_m = p_Dintake_m
'End Property
Private Sub Class_Initialize()
    Call InitGS(OD_mm:=125, _
                Qnom_m3day:=250, _
                HmesTop_m:=0, _
                dcas_mm:=0, _
                Length_m:=3, _
                Angle_deg:=90)
    p_isKsepManual = False
    
End Sub
Public Sub InitGS(Optional OD_mm As Double = 125, _
                  Optional Qnom_m3day As Double = 250, _
                  Optional HmesTop_m As Double = 0, _
                  Optional Angle_deg As Double = 90, _
                  Optional dcas_mm As Double = 0, _
                  Optional Length_m As Double = 1)
' метод инициализации параметров газосепаратора
' в зависимости от габарита
' OD_mm     - определяет габарит
' HmesTop_m - глубина подвеса в скважине, может пригодится когда то, пока про запас
' Angle_deg - угол установки к горизонтали 90 - вертикально
' dcas_mm   - диаметр эксплуатационной колоны в месте установки
    p_OD_mm = OD_mm
    p_Angle_deg = Angle_deg
    If dcas_mm = 0 Then
        p_Dcas_m = OD_mm + 10
    Else
        p_Dcas_m = dcas_mm
    End If
    p_HmesTop = HmesTop_m
    p_Length_m = Length_m
    p_Qnom_m3day = Qnom_m3day
    
    ' пока задаем тут - надо будет в зависимости от модели изменить потом
    p_Pshaftnom_w = 1000            ' по умолчанию считаем что 1 квт уходит на сепарацию при номинальной частоте
    p_w_rpm = 3000                  ' по умолчанию 3000 оборотов в секунду
    p_fnom_Hz = 50
    p_KsepGSMax = 0.9
    
End Sub
' =======================  геометрия
Public Property Get Length_m() As Double
    Length_m = p_Length_m
End Property
' глубина установки  (верхняя точка)
Public Property Get HmesTop_m() As Double
   HmesTop_m = p_HmesTop
End Property
'Public Property Let HmesTop_m(val As Double)
'   p_HmesTop = val
'End Property
' глубина нижней точки установки
Public Property Get HmesDown_m() As Double
   HmesDown_m = HmesTop_m + Length_m
End Property
Public Property Get Diam_m() As Double
   Diam_m = p_OD_mm / 1000
End Property
' угол к горизонтали под которым установлена установка
' угол задается извне системой скважиной при установке системы в скважину
Public Property Get AngleHor_deg() As Double
   AngleHor_deg = p_Angle_deg
End Property
Public Property Get AngleVert_deg() As Double
   AngleVert_deg = AngleVert_deg - 90
End Property
Public Property Get Fluid() As CPVT
   Set Fluid = p_Fluid
End Property
Public Property Get FluidTub() As CPVT
   Set FluidTub = p_FluidTub
End Property
Public Property Get Fluidcas() As CPVT
   Set Fluidcas = p_FluidCas
End Property
Public Property Set Fluid(val As CPVT)
  Set p_Fluid = val       ' берем новый объект в работу
  Set p_FluidTub = val
  Set p_FluidCas = val
End Property
Public Property Get isKsepManual() As Boolean
   isKsepManual = p_isKsepManual
End Property
Public Property Let isKsepManual(val As Boolean)
   p_isKsepManual = val
End Property
Public Property Get Ksep_fr() As Double
   Ksep_fr = p_KsepTotal_d
End Property
Public Property Let Ksep_fr(val As Double)
   p_KsepTotal_d = val
End Property
Private Sub SeparateFluids()
' метод для принудительного разделения свойст флюида
   ' создаем новые экзампляры
   Set p_FluidTub = New CPVT
   Set p_FluidCas = New CPVT
   '  копируем в них значения
   p_FluidTub.Copy p_Fluid
   p_FluidCas.Copy p_Fluid
End Sub
Public Sub Calc_GasSep(PT As PTtype, Optional f_Hz As Double = 50)
' метод расчета параметров газосепаратора при заданных термобарических условиях
' считает, сепарацию, потребляемую мощность, при необходимости другие параметры
' расчитывается естественная и искуственная сепарация, модифицируются флюиды после сепарации
' возвращается значение коэффициента сепарации общего
'
    
    c_PCurve.ClearPoints
    c_TCurve.ClearPoints
    With Fluid
        .Calc_PVT_PT PT
        If Not isKsepManual Then
            p_KsepNatural = Calc_NatSeparation_d()
            p_QmixGS_rc_m3day = .Qliq_rc_m3day + .Qgas_rc_m3day * (1 - p_KsepNatural)
            p_KsepGasSep_d = calc_GSsep_d(p_QmixGS_rc_m3day)
            p_KsepTotal_d = p_KsepNatural + (1 - p_KsepNatural) * p_KsepGasSep_d
        End If
    End With
    If p_KsepTotal_d > 0 Then
        ' разделяем и модифицируем свойства флюидов после сепарации
        Call SeparateFluids
        Call p_FluidTub.ModAfterSeparation(PT.p_atma, PT.T_C, p_KsepTotal_d, GasGoesIntoSolution)
        p_FluidCas.ZNLF = True
    End If
    ' поскольку основная мощность потребляемая газосепаратором тратится шнеком на повышение давления
    ' то можно предположить, что потери мощность с ростом частоты будут расти в кубе
    ' при этом зависимости от дебита выраженной нет, поскольку будет меняться КПД
    ' это предположение требует уточнения (11.07.2018 rnt)
    p_Pshaft_w = p_Pshaftnom_w * (f_Hz / p_fnom_Hz) ^ 3
    
    ' добавим точки для газосепаратора
    c_PCurve.AddPoint HmesTop_m, PT.p_atma
    c_PCurve.AddPoint HmesDown_m, PT.p_atma
    c_TCurve.AddPoint HmesTop_m, PT.T_C
    c_TCurve.AddPoint HmesDown_m, PT.T_C
    
End Sub
Private Function calc_GSsep_d(Qmix_m3day As Double)
' расчет коэффициента сепарации газосепаратора
' предполагается линейная зависимость от дебита
' Qmix_m3day - расход ГЖС поступающей на вход с учетом естественной сепарации с рабочих условиях
' потом хорошо бы уточнить и приспособить для разных видов конструкции
    Dim ks As Double
    Dim qmix As Double
    Dim qmax As Double
    qmix = Qmix_m3day
    qmax = p_Qnom_m3day
    If qmix < qmax Then
        ks = (qmix / qmax) * p_KsepGSMax
    Else
        ks = 0
    End If
    calc_GSsep_d = ks
End Function
Private Function Calc_NatSeparation_d() As Double
    With Fluid
        Calc_NatSeparation_d = unf_calc_natural_separation(p_OD_mm / 1000, p_Dcas_m, _
                                                        .Qliq_scm3day, .QgasInSitu_scm3day, .Bo_m3m3, .Bg_m3m3, .sigma_o_Nm, .RhoOil_sckgm3, .rhoGas_sckgm3, .wc_perc)
    End With
End Function
' метод построения кривой зависимости коэффициента сепарации от дебита
Public Function Build_SeparCurve()
    
'    Dim i As Integer
'    Dim qtest As Double, Rptest As Double
'    Dim qinit As Double, Rpinit As Double, Rsbinit As Double
'    Dim qmin As Double, Qmax As Double
'    Dim Ks As Double
'    Dim numPoint As Integer
'
'    Curve(str_KsepNatQl_curve).ClearPoints
'    Curve(str_KsepGasSepQl_curve).ClearPoints
'    Curve(str_KsepTotalQl_curve).ClearPoints
'
'    Curve(str_KsepNatRp_curve).ClearPoints
'    Curve(str_KsepGasSepRp_curve).ClearPoints
'    Curve(str_KsepTotalRp_curve).ClearPoints
'
'    numPoint = 20
'
'    qmin = 0: Qmax = 500
'
'    'одолжим ненадолго дебит по скважине
'    qinit = Qliq_scm3day
'    Rpinit = Fluid.Rp_m3m3
'    Rsbinit = Fluid.Rsb_m3m3
'
'    For i = 0 To numPoint
'        qtest = (Qmax - qmin) / numPoint * i + qmin
'        Qliq_scm3day = qtest
'        Ks = Calc_SeparationAtIntake_d(p_Pintake_atma, p_Tintake_C)
'
'        Curve(str_KsepNatQl_curve).AddPoint qtest, p_KsepNatural
'        Curve(str_KsepGasSepQl_curve).AddPoint qtest, p_KsepGasSep_d
'        Curve(str_KsepTotalQl_curve).AddPoint qtest, p_KsepTotal_d
'    Next i
'
'    ' вернем дебит по скважине назад
'    Qliq_scm3day = qinit
'
'    ' далее построим кривые по сепарации изменяя газовый фактор на скважине
'    Rptest = max(Fluid.Rsb_m3m3 - 100, 50)
'
'    For i = 0 To numPoint
'        Rptest = Rptest + 10
'        Fluid.Rp_m3m3 = Rptest
'
'        Ks = Calc_SeparationAtIntake_d(p_Pintake_atma, p_Tintake_C)
'
'        Curve(str_KsepNatRp_curve).AddPoint qtest, p_KsepNatural
'        Curve(str_KsepGasSepRp_curve).AddPoint qtest, p_KsepGasSep_d
'        Curve(str_KsepTotalRp_curve).AddPoint qtest, p_KsepTotal_d
'    Next i
'    Fluid.Rp_m3m3 = Rpinit
'    Fluid.Rsb_m3m3 = Rsbinit
    
End Function
