'=======================================================================================
'Unifloc7.3  Testudines                                           khabibullinra@gmail.com
'Библиотека расчетных модулей по нефтяному инжинирингу
'2000 - 2018 г
'
'=======================================================================================
' Работа со строками для обеспечения удобства
'
'
'
'
Option Explicit
Public Function FormatInteger(i As Long, W As Long) As String
    Dim tmp
    If W <= 1 Then
        FormatInteger = Format(i, "0")
    Else
        tmp = Format(i, String(W - 1, "#") & "0")
        Do While Len(tmp) < W
            tmp = " " & tmp
        Loop
        FormatInteger = tmp
    End If
End Function
Public Function FormatFReal(r As Double, W As Long, p As Long) As String
    Dim tmp
    tmp = Format(r, "0." & String(p, "0"))
    Do While Len(tmp) < W
        tmp = " " & tmp
    Loop
    FormatFReal = tmp
End Function
Public Function FormatEReal(r As Double, W As Long, p As Long) As String
    Dim tmp
    tmp = Format(r, "0." & String(p, "0") & "E+0")
    Do While Len(tmp) < W
        tmp = " " & tmp
    Loop
    FormatEReal = tmp
End Function
'Public Sub ConsoleOutputString(s As String)
'End Sub
Public Function SplitTrim(ByVal s As String, ByVal Sep As String) As String()
    Dim SPrev As String
    s = Trim(s)
    Do
        SPrev = s
        s = Replace(s, "  ", " ")
    Loop Until s = SPrev
    SplitTrim = Split(s, Sep)
End Function
Function VertArrayFromRange(rng As Range)
     Dim arr_out() As Double
     Dim i As Integer
     Dim NumVal As Integer
     NumVal = rng.Rows.count
     ReDim arr_out(NumVal - 1)
     For i = 1 To NumVal
        arr_out(i - 1) = rng.Value2(i, 1)
     Next i
     VertArrayFromRange = arr_out
End Function
Public Function s(val As Double) As String
    s = Format(val, "0##.##")
End Function
'Public Function OpenDataset(ByVal FileName As String, ByRef DS As ALGLIBDataset) As Boolean
'    DS.NClasses = 0
'    DS.NIn = 0
'    DS.NOut = 0
'    DS.TotalSize = 0
'    DS.TrnSize = 0
'    DS.TstSize = 0
'    DS.ValSize = 0
'
'    FileNumber = FreeFile()
'    LinesRead = 0
'    On Error GoTo HandleNoFile
'    Open FileName For Input As FileNumber
'    On Error GoTo HandleErrorWithinFile
'    Do While Not EOF(FileNumber)
'        Line Input #FileNumber, TextLine
'        If (Left(TextLine, 2) <> "//") And (Trim(TextLine) <> "") Then
'            If LinesRead = 0 Then
'                '
'                ' read header
'                '
'                HeadArr = SplitTrim(TextLine, "#")
'                If UBound(HeadArr) <> 1 Then Error 1
'
'                '
'                ' rows information
'                '
'                RowsArr = SplitTrim(HeadArr(0), " ")
'                If (UBound(RowsArr) < 0) Or (UBound(RowsArr) > 2) Then Error 1
'                If UBound(RowsArr) = 0 Then
'                    DS.TotalSize = Val(RowsArr(0))
'                    DS.TrnSize = DS.TotalSize
'                End If
'                If UBound(RowsArr) = 1 Then
'                    DS.TrnSize = Val(RowsArr(0))
'                    DS.TstSize = Val(RowsArr(1))
'                    DS.TotalSize = DS.TrnSize + DS.TstSize
'                End If
'                If UBound(RowsArr) = 2 Then
'                    DS.TrnSize = Val(RowsArr(0))
'                    DS.ValSize = Val(RowsArr(1))
'                    DS.TstSize = Val(RowsArr(2))
'                    DS.TotalSize = DS.TrnSize + DS.ValSize + DS.TstSize
'                End If
'                If DS.TotalSize <= 0 Or DS.TrnSize < 0 Or DS.ValSize < 0 Or DS.TstSize < 0 Then Error 1
'                TrnFirst = 0
'                TrnLast = TrnFirst + DS.TrnSize
'                ValFirst = TrnLast
'                ValLast = ValFirst + DS.ValSize
'                TstFirst = ValLast
'                TstLast = TstFirst + DS.TstSize
'
'                '
'                ' columns
'                '
'                ColsArr = SplitTrim(HeadArr(1), " ")
'                If (UBound(ColsArr) <> 0) And (UBound(ColsArr) <> 3) Then Error 1
'                If UBound(ColsArr) = 0 Then
'                    DS.NIn = Val(ColsArr(0))
'                    If DS.NIn <= 0 Then Error 1
'                End If
'                If UBound(ColsArr) = 3 Then
'                    If (LCase(ColsArr(0)) <> "reg") And (LCase(ColsArr(0)) <> "cls") Then Error 1
'                    If ColsArr(2) <> "=>" Then Error 1
'                    DS.NIn = Val(ColsArr(1))
'                    If DS.NIn < 1 Then Error 1
'                    If LCase(ColsArr(0)) = "reg" Then
'                        DS.NClasses = 0
'                        DS.NOut = Val(ColsArr(3))
'                        If DS.NOut < 1 Then Error 1
'                    Else
'                        DS.NClasses = Val(ColsArr(3))
'                        DS.NOut = 1
'                        If DS.NClasses < 2 Then Error 1
'                    End If
'                End If
'
'                '
'                ' initialize arrays
'                '
'                ReDim DS.AllDataset(0 To DS.TotalSize - 1, 0 To DS.NIn + DS.NOut - 1)
'                If DS.TrnSize > 0 Then ReDim DS.Trn(0 To DS.TrnSize - 1, 0 To DS.NIn + DS.NOut - 1)
'                If DS.ValSize > 0 Then ReDim DS.Val(0 To DS.ValSize - 1, 0 To DS.NIn + DS.NOut - 1)
'                If DS.TstSize > 0 Then ReDim DS.Tst(0 To DS.TstSize - 1, 0 To DS.NIn + DS.NOut - 1)
'            Else
'                '
'                ' read data
'                '
'                VarsArr = SplitTrim(TextLine, " ")
'                If UBound(VarsArr) <> DS.NIn + DS.NOut - 1 Then Error 1
'                TmpC = Round(VarsArr(DS.NIn + DS.NOut - 1))
'                If (DS.NClasses > 0) And ((TmpC < 0) Or (TmpC >= DS.NClasses)) Then Error 1
'                RowIndex = LinesRead - 1
'                For i = 0 To DS.NIn + DS.NOut - 1 Step 1
'                    DS.AllDataset(RowIndex, i) = VarsArr(i)
'                    If RowIndex >= TrnFirst And RowIndex < TrnLast Then
'                        DS.Trn(RowIndex - TrnFirst, i) = VarsArr(i)
'                    End If
'                    If RowIndex >= ValFirst And RowIndex < ValLast Then
'                        DS.Val(RowIndex - ValFirst, i) = VarsArr(i)
'                    End If
'                    If RowIndex >= TstFirst And RowIndex < TstLast Then
'                        DS.Tst(RowIndex - TstFirst, i) = VarsArr(i)
'                    End If
'                Next i
'            End If
'            LinesRead = LinesRead + 1
'        End If
'    Loop
'    Close FileNumber
'    OpenDataset = True
'    Exit Function
'HandleNoFile:
'    OpenDataset = False
'    Exit Function
'HandleErrorWithinFile:
'    Close FileNumber
'    OpenDataset = False
'    Exit Function
'End Function
