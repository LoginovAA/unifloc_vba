'=======================================================================================
'Unifloc7.3  Testudines                                           khabibullinra@gmail.com
'Библиотека расчетных модулей по нефтяному инжинирингу
'2000 - 2018 г
'
'=======================================================================================
' функции для проведения расчетов по режимам работы УЭЦН из интерфейса Excel
Option Explicit
' =============== функции для расчета УЭЦН  ============================
'
'
Public Function ESP_head_m(Qliq_m3day As Double, Optional NumStages As Integer = 1, _
                            Optional freq As Double = 50, Optional PumpID = 674, _
                            Optional mu_cSt As Double = -1) As Double
' напор УЭЦН номинальный
' Qliq_m3day - дебит жидкости в условиях насоса (стенд)
' NumStages  - количество ступеней
' Freq       - частота вращения насоса
' PumpID     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
'
    If Not checkID_ESP(PumpID) Then
        ESP_head_m = 0
        Exit Function
    End If
    
    ESP.Frequency = freq
    ESP.StageNum = NumStages
    ESP_head_m = ESP.Get_ESP_Head_m(Qliq_m3day, NumStages, mu_cSt)
End Function
Public Function ESP_Power_W(Qliq_m3day As Double, Optional NumStages As Integer = 1, _
                            Optional freq As Double = 50, Optional PumpID = 674, _
                            Optional mu_cSt As Double = -1) As Double
' мощность УЭЦН номинальная потребляемая
' Qliq_m3day - дебит жидкости в условиях насоса (стенд)
' NumStages  - количество ступеней
' Freq       - частота вращения насоса
' PumpID     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
    
    If Not checkID_ESP(PumpID) Then
        ESP_Power_W = 0
        Exit Function
    End If
    
    ESP.Frequency = freq
    ESP.StageNum = NumStages
    ESP_Power_W = ESP.Get_ESP_Power_W(Qliq_m3day, NumStages, mu_cSt)
End Function
Public Function ESP_eff_fr(Qliq_m3day As Double, Optional NumStages As Integer = 1, _
                            Optional freq As Double = 50, Optional PumpID = 674, _
                            Optional mu_cSt As Double = -1) As Double
' КПД УЭЦН номинальный
' Qliq_m3day - дебит жидкости в условиях насоса (стенд)
' NumStages  - количество ступеней
' Freq       - частота вращения насоса
' PumpID     - номер насоса в базе данных
' mu_cSt     - вязкость жидкости
    
    If Not checkID_ESP(PumpID) Then
        ESP_eff_fr = 0
        Exit Function
    End If
    
    ESP.Frequency = freq
    ESP.StageNum = NumStages
    ESP_eff_fr = ESP.Get_ESP_effeciency_fr(Qliq_m3day, mu_cSt)
End Function
Public Function ESP_name(Optional PumpID = 674) As String
' PumpID - идентификатор насоса в базе данных
    If Not checkID_ESP(PumpID) Then
        ESP_name = ""
        Exit Function
    End If
    ESP_name = ESP.PumpName
End Function
Public Function ESP_maxRate_m3day(Optional freq As Double = 50, Optional PumpID = 674) As Double
    If Not checkID_ESP(PumpID) Then
        ESP_maxRate_m3day = 0
        Exit Function
    End If
    ESP.Frequency = freq
    ESP_maxRate_m3day = ESP.MaxRate_m3day
End Function
Public Function ESP_optRate_m3day(Optional freq As Double = 50, Optional PumpID = 674) As Double
    If Not checkID_ESP(PumpID) Then
        ESP_optRate_m3day = 0
        Exit Function
    End If
    ESP.Frequency = freq
    ESP_optRate_m3day = ESP.NominalRate_m3day
End Function
Public Function ESP_IDbyRate(Q As Double)
' возвращает ID в зависимости от диапазона дебитов
' насосы подобраны вручную из текущей базы
' функция нужна для удобства использования непосредственно в Excel для тестовых заданий и учебных примеров
    If Q > 0 And Q < 20 Then ESP_IDbyRate = 738: Exit Function   ' ВНН5-15
    If Q >= 20 And Q < 40 Then ESP_IDbyRate = 740: Exit Function   ' ВНН5-30
    If Q >= 40 And Q < 60 Then ESP_IDbyRate = 1005: Exit Function    ' ВНН5-50
    If Q >= 60 And Q < 100 Then ESP_IDbyRate = 1006: Exit Function    ' ВНН5-80
    If Q >= 100 And Q < 150 Then ESP_IDbyRate = 737: Exit Function    ' ВНН5-125
    If Q >= 150 And Q < 250 Then ESP_IDbyRate = 1010: Exit Function    ' ЭЦН5A-200
    If Q >= 250 And Q < 350 Then ESP_IDbyRate = 1033: Exit Function    ' ЭЦН5A-320Э
    If Q >= 350 And Q < 600 Then ESP_IDbyRate = 753: Exit Function    ' ВНН5А-500
    If Q >= 600 And Q < 800 Then ESP_IDbyRate = 754: Exit Function    ' ВНН5А-700
    If Q >= 800 And Q < 1200 Then ESP_IDbyRate = 755: Exit Function  ' ВНН6-1000
    If Q > 1200 Then ESP_IDbyRate = 264
    
End Function
Public Function ESP_dP_atma(p_atma As Double, Qliq_m3day As Double, WCT_perc As Double, _
                        Optional NumStages As Integer = 1, Optional freq As Double = 50, _
                        Optional PumpID = 674, _
                        Optional gamma_gas = const_gamma_gas_default, _
                        Optional gamma_oil = const_gamma_oil_default, _
                        Optional gamma_wat = const_gamma_wat_default, _
                        Optional rsb_m3m3 = const_Rsb_default, _
                        Optional Rp_m3m3 As Double = -1, _
                        Optional Pb_atma As Double = -1, _
                        Optional Tres_C As Double = const_Tres_default, _
                        Optional Bob_m3m3 As Double = -1, _
                        Optional Muob_cP As Double = -1, _
                        Optional PVTcorr = StandingBased, _
                        Optional Ksep_fr As Double = 0, _
                        Optional PKsep_atma As Double = -1, _
                        Optional TKsep_C As Double = -1, _
                        Optional Tin_C As Double = 50, _
                        Optional Tdis_C As Double = 50, _
                        Optional CalcFromIntake As Boolean = 1, _
                        Optional GasDegtType As Integer = 0, Optional Kdegr As Double = 0)
'  расчет перепада давления в насосе при перекачке ГЖС с заданными
' характеристиками (харктеристики фдюида для поверхности берутся)
' Pin_atma       - давление на приеме насоса
' Qliq_m3day    - дебит жидкости на поверхности
' WCT_perc      - обводненность
' NumStages     - количество ступеней
' Freq          - частота, Гц
' PumpID        - идентификатор насоса
' PVT           - набор данных PVT
' Tin_C         - температура на приеме насоа
' Tdis_C        - температура на выкиде насоса. если =0 и CalcFromIntake = 1 то рассчитываетс
' CalcFromIntake - режим расчета снизу вверх или сверху вниз
' GasDegtType   - тип насоса по работе с газом
' Kdegr         - коэффициент деградации напора
    If Not checkID_ESP(PumpID) Then
        ESP_dP_atma = 0
        Exit Function
    End If
    Dim Fluid As New CPVT
    Fluid.Init gamma_gas, gamma_oil, gamma_wat, rsb_m3m3, Pb_atma, Bob_m3m3, PVTcorr, Tres_C, Rp_m3m3, Muob_cP
    Fluid.Qliq_scm3day = Qliq_m3day
    Fluid.wc_perc = WCT_perc
    
    If PKsep_atma < 0 Then PKsep_atma = p_atma
    If TKsep_C < 0 Then TKsep_C = Tin_C
    If Ksep_fr > 0 And Ksep_fr <= 1 Then
        Call Fluid.ModAfterSeparation(PKsep_atma, TKsep_C, Ksep_fr, GasnotGoesIntoSolution)
    End If
    
    Set ESP.Fluid = Fluid
    
    ESP.Frequency = freq
    ESP.StageNum = NumStages
    ESP.PressureDegradation = Kdegr
    
    Call ESP.Calc_ESP(p_atma, Tin_C, Tdis_C, CalcFromIntake, GasDegtType)
    
    ESP_dP_atma = Array(ESP.Pdis_atma - ESP.Pintake_atma, ESP.Tdischarge_C - ESP.Tintake_c)
End Function
' расчет производительности системы УЭЦН
Public Function ESP_system_calc(Pintake_atma As Double, Qliq_m3day As Double, WCT_perc As Double, _
                        Optional PumpID1 = 674, Optional NumStages1 As Integer = 1, _
                        Optional PumpID2 = 0, Optional NumStages2 As Integer = 1, _
                        Optional freq As Double = 50, _
                        Optional MotorID = 674, _
                        Optional CableID = 674, _
                        Optional PVTstr As String, _
                        Optional Tin_C As Double = 50, _
                        Optional Tdis_C As Double = 50, _
                        Optional CalcFromIntake As Boolean = 1, _
                        Optional GasDegtType As Integer = 0, Optional Kdegr As Double = 0)
' расчет параметров системы УЭЦН
' характеристиками (харктеристики фдюида для поверхности берутся)
' Pin_atma       - давление на приеме насоса
' Qliq_m3day    - дебит жидкости на поверхности
' WCT_perc      - обводненность
' NumStages     - количество ступеней
' Freq          - частота, Гц
' PumpID        - идентификатор насоса
' PVT           - набор данных PVT
' Tin_C         - температура на приеме насоа
' Tdis_C        - температура на выкиде насоса. если =0 и CalcFromIntake = 1 то рассчитываетс
' CalcFromIntake - режим расчета снизу вверх или сверху вниз
' GasDegtType   - тип насоса по работе с газом
' Kdegr         - коэффициент деградации напора
    Dim ESP1 As CESPpump
    Dim ESP2 As CESPpump
    Dim ESPsys As New CESPsystem
    
    If Not checkID_ESP(PumpID1) Then
        ESP_system_calc = 0
        Exit Function
    Else
        Set ESP1 = getESP(PumpID1)
        ESP1.Frequency = freq
        ESP1.StageNum = NumStages1
        ESPsys.AddESPpump ESP1
    End If
    
    If checkID_ESP(PumpID2) Then
        Set ESP2 = getESP(PumpID2)
        ESP2.Frequency = freq
        ESP2.StageNum = NumStages2
        ESPsys.AddESPpump ESP2
    End If
    
    Dim Fluid As CPVT
    Set Fluid = PVT_Decode_string(PVTstr)
    Set ESPsys.Fluid = Fluid
    
    Fluid.Qliq_scm3day = Qliq_m3day
    Fluid.wc_perc = WCT_perc
    ESPsys.ESPtype = GasDegtType
'    ESP.PressureDegradation = Kdegr
'    Call ESP.Calc_ESP(P_atma, Tin_C, Tdis_C, CalcFromIntake)
'    ESP_dP_atma = Array(ESP.Pdis_atma - ESP.Pintake_atma, ESP.Tdischarge_C - ESP.Tintake_c)
End Function
Sub Описание_ESP_dP_atma()
' функция определения описания для интерфейса Excel
' достаточно вызвать один раз для того, чтобы поменять описание
' лучше вызывать функцию u7_descriptions.Задать_описания если надо поменять описания
    Dim Pin_atma, Qliq_m3day, WCT_perc, NumStages, freq, PumpID, gamma_gas, gamma_oil, _
               gamma_wat, rsb_m3m3, Rp_m3m3, _
              Pb_atma, Tres_C, Bob_m3m3, Muob_cP, PVTcorr, Ksep_fr, PKsep_atma, _
              TKsep_C, Tin_C, Tdis_C, CalcFromIntake, GasDegtType, Kdegr
    Dim a
    Pin_atma = "Давление на приеме (или на выкиде если CalcFromIntake = 0), атма"
    Qliq_m3day = "Дебит жидкости на поверхности, м3/сут"
    WCT_perc = "Обводненность объемная на поверхности, %"
    NumStages = "Количество ступеней УЭЦН"
    freq = "Частота питающего напряжения УЭЦН, Гц"
    PumpID = "Номер насоса в базе данных"
    gamma_gas = "Относительная плотность газа, по воздуху (плотность воздуха 1.2217 кг/м3)"
    gamma_oil = "Относительная плотность нефти, по воде"
    gamma_wat = "Относительная плотность воды"
    rsb_m3m3 = "Газосодержание в нефти при давлении насыщения (в пластовых условиях), м3/м3"
    Rp_m3m3 = "Газовый фактор добычной (на устье скважины), м3/м3"
    Pb_atma = "Давление насыщения при заданной температуре Tres_C, атма"
    Tres_C = "Температура пластовая (соответствует давлению насыщения), С"
    Bob_m3m3 = "Объемный коэффициент нефти при давлении насыщения, м3/м3"
    Muob_cP = "Вязкость нефти при давлении насыщения, сП"
    PVTcorr = "Набор PVT корреляций. 0 - на основе Стендинга, 1 - на основе Валко Маккейна"
    Ksep_fr = "Значение коэффициента сепарации. Модифицирует свойства флюида учитывая сепарацию части свободного газа"
    PKsep_atma = "Давление при котором произошла сепарация части свободного газа, атма"
    TKsep_C = "Температура при которой произошла сепарация части свободного газа, С"
    Tin_C = "Температура на приеме насоса, С"
    Tdis_C = "Температура на выкиде насоса, С. Если = 0 и расчет от приема то рассчитывается, иначе учитывается то, что задано"
    CalcFromIntake = "Флаг показывает направление расчета 1 - от приема к выкиду, 0 от выкида к приему (иногда может считать медленнее)"
    GasDegtType = "Тип насоса для учета деградации по газу. 0 - не учитывается, 1 - стандартный, 2, 3, 4 с предвключенными модулями"
    Kdegr = "Коэффициент деградации напора"
    a = Array(Pin_atma, Qliq_m3day, WCT_perc, NumStages, freq, PumpID, gamma_gas, gamma_oil, _
               gamma_wat, rsb_m3m3, Rp_m3m3, _
              Pb_atma, Tres_C, Bob_m3m3, Muob_cP, PVTcorr, Ksep_fr, PKsep_atma, _
              TKsep_C, Tin_C, Tdis_C, CalcFromIntake, GasDegtType, Kdegr)
    Application.MacroOptions _
            Macro:="ESP_dP_atma", _
            Description:="Расчет перепада давлений развиваемого УЭЦН. Возвращает перепад давления и перепад температур", _
            Category:="УЭЦН", _
            ArgumentDescriptions:=a
End Sub
'Public Function ESP_dPdown_atma(Pin_atma As Double, Qliq_m3day As Double, Optional Ksep_fr As Double = 0, Optional NumStages As Integer = 1, Optional Freq As Double = 50, Optional PumpID = 674, _
'                      Optional WCT_perc As Double = 0, Optional Rp_m3m3 As Double = -1, Optional rsb_m3m3 As Double = 100, Optional Pb_atma As Double = -1, Optional Tres_C As Double = 90, _
'                      Optional gamma_oil = const_gamma_oil_default, Optional gamma_wat = const_gamma_wat_default, Optional gamma_gas = const_gamma_gas_default, _
'                      Optional Bob_m3m3 As Double = -1, Optional Tin_C As Double = 50, Optional Tout_C As Double = 50, _
'                      Optional PVTcorr As PVT_CORRELATION = 0, Optional CalcFromIntake As Integer = 1, _
'                      Optional GasDegtType As Integer = 0, Optional Kdegr As Double = 0)
''  расчет перепада давления в насосе при перекачке ГЖС с заданнвми характеристиками (харктеристики фдюида для поверхности берутся)
''
'    Dim PTup As PTtype
'    If Not checkID(PumpID) Then
'        ESP_dPdown_atma = 0
'        Exit Function
'    End If
'    Dim Fluid As New CPVT
'    Call Fluid.SetRpRsb(Rp_m3m3, rsb_m3m3)
'    Fluid.Pb_atma = Pb_atma
'    Fluid.Tres_C = Tres_C
'    Fluid.PVT_CORRELATION = PVTcorr
'    Fluid.Bob_m3m3 = Bob_m3m3
'    Fluid.gamma_g = gamma_gas
'    Fluid.gamma_o = gamma_oil
'    Fluid.gamma_w = gamma_wat
'    Fluid.Qliq_scm3day = Qliq_m3day
'    Fluid.wc_perc = WCT_perc
'
''   Dim fluidESP As CPVT
''   Ksep_fr = 0.5
'
'    Call Fluid.ModAfterSeparation(Pin_atma, Tin_C, Ksep_fr, GasnotGoesIntoSolution)
'    Set ESP.Fluid = Fluid 'ESP
'
'    ESP.ESPtype = GasDegtType
'    ESP.Frequency = Freq
'    ESP.StageNum = NumStages
'    ESP.PressureDegradation = Kdegr
'  '  ESP_dP_atma = ESP.Calc_ESP_dP_atma(Pin_atma, Ksep_fr, Tin_C, CalcFromIntake)
'   ' Call
'    PTup.P_atma = Pin_atma
'    PTup.T_C = Tin_C + 20
'    ESP_dPdown_atma = Pin_atma - ESP.Calc_ESP_UpDown(PTup, Tin_C).P_atma  'ESP.Pdis_atma
'End Function
'
'--------------------- Двигатель -----------------------
'' функция загрузки параметров двигателя с листа
'Public Function LoadMotorManually(Optional P_kW = 30, Optional U_V = 1000, Optional I_A = 10, _
'                    Optional Eff = 0.8, Optional CosPhi = 0.8, Optional F_Hz = 50, _
'                    Optional s = 0.05, Optional lambda = 2, Optional Diam = 117) As String
'    ' возвращаяет код двигателя
''On Error GoTo er1:
''    With Motor
''        .ID = 0
''        .MotorName = "_ПЭД_" & P_kW & "-" & Diam & "-" & U_V
''        .ManufacturerName = "Ручной ввод"
''        .Pnom_kW = P_kW
''        .Unom_lin_V = U_V
''        .Inom_phase_A = I_A
''        .Effnom_d = Eff
''        .CosPhinom_d = Cosphi
''        .fnom_Hz = f_Hz
''        .Snom_d = s
''        .Lambda_d = lambda
''        .minDcas_mm = Diam + 6
''
''        Call .CalcModelGridin
''    End With
''    LoadMotorManually = Motor.MotorName
''    Exit Function
''er1:
'' addLogMsg "Не удалось загрузить вручную параметры двигателя. Загружены параметры по умолчанию"
'' Set Motor = New CESPMotor
'End Function
'' функция расчета загрузки двигателя от скольжения
'' rnt 03/2016
'Public Function MotorLoad_d(s As Double, _
'                    Optional freqU_Hz As Double = 50, _
'                    Optional U_V As Double = -1, _
'                    Optional MotorID As Integer = 0) As Double
''
''   s           - скольжение от 0 до 1
'' опциональные параметры
''   freqU_Hz    - частота вращения внешнего поля
''   U_V         - напряжение питания двигателя, фазовое, В
'' выход
''   число       - значение момента двигателя при заданных частоте и напряжении
'
'
''    Application.Volatile (True)  ' поскольку пока есть зависимость от внешнего объекта - сделаем функцию чувствительной к пересчету
''
''
'''    Dim Motor As New CESPmotor
'''    Motor.CalcModelGridin
''
''    If freqU_Hz > 0 Then Motor.f_Hz = freqU_Hz
''    If U_V > 0 Then Motor.Ulin_V = U_V
''
''    Motor.S_d = s
''    MotorLoad_d = Motor.Load_d
'
'End Function
' функция расчета момента двигателя от проскальзования
' rnt 03/2016
Public Function MotorM_slip_Nm(s As Double, _
                    Optional freq_Hz As Double = 50, _
                    Optional U_V As Double = -1, _
                    Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0) As Double
'
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor_slip s, freq_Hz, U_V
    MotorM_slip_Nm = Motor.M_Nm
    
End Function
Public Function MotorI_slip_A(s As Double, _
                    Optional freq_Hz As Double = 50, _
                    Optional U_V As Double = -1, _
                    Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0) As Double
'
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor_slip s, freq_Hz, U_V
    MotorI_slip_A = Motor.I_lin_A
    
End Function
Public Function MotorCosPhi_slip(s As Double, _
                    Optional freq_Hz As Double = 50, _
                    Optional U_V As Double = -1, _
                    Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0) As Double
'
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor_slip s, freq_Hz, U_V
    MotorCosPhi_slip = Motor.CosPhi_d
    
End Function
Public Function MotorEff_slip(s As Double, _
                    Optional freq_Hz As Double = 50, _
                    Optional U_V As Double = -1, _
                    Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0) As Double
'
'   s           - скольжение двигателя
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor_slip s, freq_Hz, U_V
    MotorEff_slip = Motor.Eff_d
    
End Function
' функция расчета момента двигателя от мощности на валу
' rnt 03/2016
Public Function MotorM_Nm(Pshaft_kW As Double, _
                    Optional freq_Hz As Double = 50, _
                    Optional U_V As Double = -1, _
                    Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение момента двигателя при заданных частоте и напряжении
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorM_Nm = Motor.M_Nm
    
End Function
' функция расчета рабочего тока двигателя
' rnt 03/2016
Public Function MotorI_A(Pshaft_kW As Double, _
                    Optional freq_Hz As Double = 50, _
                    Optional U_V As Double = -1, _
                    Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorI_A = Motor.I_lin_A
    
End Function
' функция расчета коэффициента мощности двигателя
' rnt 03/2016
Public Function MotorCosPhi_d(Pshaft_kW As Double, _
                    Optional freq_Hz As Double = 50, _
                    Optional U_V As Double = -1, _
                    Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorCosPhi_d = Motor.CosPhi_d
    
End Function
' функция расчета КПД двигателя
' rnt 03/2016
Public Function MotorEff_d(Pshaft_kW As Double, _
                    Optional freq_Hz As Double = 50, _
                    Optional U_V As Double = -1, _
                    Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorEff_d = Motor.Eff_d
    
End Function
' функция расчета скольжения от мощности на валу
' rnt 07/2018
Public Function MotorS_d(Pshaft_kW As Double, _
                    Optional freq_Hz As Double = 50, _
                    Optional U_V As Double = -1, _
                    Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0) As Double
'
' Pshaft_kW     - мощность развиваемая двигателем на валу
' опциональные параметры
'   freq_Hz     - частота вращения внешнего поля
'   U_V         - напряжение рабочее, линейное, В
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым
' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    Motor.Calc_motor Pshaft_kW, freq_Hz, U_V
    MotorS_d = Motor.S_d
    
End Function
' функция выдает название двигателя по его характеристикам
' rnt 07/2018
Public Function MotorName(Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0)
'
' опциональные параметры
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
    Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    MotorName = Motor.MotorName
    
End Function
' функция выдает название номинальную мощность по его характеристикам
' rnt 07/2018
Public Function MotorPnom_kW(Optional Unom_V As Double = 500, _
                    Optional Inom_A As Double = 10, _
                    Optional Fnom_Hz As Double = 50, _
                    Optional MotorID As Integer = 0)
'
' опциональные параметры
'   Unom_V      - номинальное напряжение питания двигателя, линейное, В
'   Inom_A      - номинальный ток двигателя, линейный, А
'   fnom_Hz     - номинальная частота вращения поля, Гц
'   MotorID     - тип двигателя 0 - задается по схеме замещения,
'                               1 - задается по каталожным кривым' выход
'   число       - значение тока потребляемого двигателем при данном режиме работы
    Dim Motor As New CESPMotor
0
Motor.InitMotor MotorID, Unom_V, Inom_A, Fnom_Hz
    MotorPnom_kW = Motor.Pnom_kW
    
End Function
' ==============================================================
' Расчет скважины
' ==============================================================
'Public Function Well_Power_w1(ByVal Hmes_m As Double, ByVal Hpump_m As Double, _
'                             ByVal Pbuf_atma As Double, ByVal Plin_atma As Double, ByVal Pwf_atma As Double, _
'                             ByVal ESP_Qnom_m3day As Double, ByVal ESP_head_m As Double, _
'                             ByVal PI_m3dayatm As Double, _
'                             Optional ByVal PowerMes_W As Double = 0, Optional Pr_atma As Double = 250, _
'                             Optional ByVal Udl_m As Double = 0, _
'                             Optional dtub_mm As Double = 62, Optional dcas_mm As Double = 125, Optional dintake_mm As Double = 102, _
'                             Optional Ksep_d As Double = 0.7, _
'                             Optional WCT_perc As Double = 0, Optional Rp_m3m3 As Double = -1, Optional Rsb_m3m3 As Double = 100, Optional Pb_atma As Double = -1, Optional Tres_C As Double = 90, _
'                             Optional gamma_oil = const_gamma_oil_default, Optional gamma_wat = const_gamma_wat_default, Optional gamma_gas = const_gamma_gas_default, _
'                             Optional Bob_m3m3 As Double = -1, _
'                             Optional esp_freq As Double = 50, Optional ESP_U_V As Double = 1000, _
'                             Optional ESP_Motor_Power_nom As Double = 0)
' End Function
' Функция расчета потребляемой мощности с учетом скважинного оборудования  (для проведения факторного анализа и прогноза УРЭ)
'
Public Function Well_Power_w(ByVal Hmes_m As Double, ByVal Hpump_m As Double, _
                             ByVal Pbuf_atma As Double, ByVal Plin_atma As Double, ByVal Pwf_atma As Double, _
                             ByVal ESP_Qnom_m3day As Double, ByVal ESP_head_m As Double, _
                             ByVal PI_m3dayatm As Double, _
                             Optional Pr_atma As Double = 250, _
                             Optional ByVal Udl_m As Double = 0, _
                             Optional dtub_mm As Double = 62, Optional dcas_mm As Double = 125, Optional dintake_mm As Double = 102, _
                             Optional Ksep_d As Double = 0.7, _
                             Optional WCT_perc As Double = 0, Optional Rp_m3m3 As Double = -1, Optional Pb_atma As Double = -1, Optional Tres_C As Double = 90, _
                             Optional gamma_oil = const_gamma_oil_default, _
                             Optional Bob_m3m3 As Double = -1, _
                             Optional esp_freq As Double = 50, Optional ESP_U_V As Double = 1000, _
                             Optional ESP_Power_W As Double = 0, Optional ESP_cos_phi As Double = 0.95, _
                             Optional ESP_cable_R_Om As Double = 1.8, Optional ESP_power_degr As Double = 0)
' Входные параметры
' Hmes_m - измерененная глубина кровли пласта, м (точка для которой будет проводиться расчет забойного давления)
' Hpump_m - измеренная глубина установки насоса, м
' Pbuf_atma - буферное давление, атм
' Plin_atma - линейное давление, атм
' Pwf_atma  - забойное давление, атм
' ESP_Qnom_m3day
' ESP_head_m
' PI_m3dayatm
' PowerMes_W   - потребляемая мощность УЭЦН по замеру, Вт, по умолчанию не учитывается
' Pr_atma
' Udl_m  - удлинение, м,  отклонение вертикальной глубины от изменеренной  (по умолчанию равно 0)
' dtub_mm       - диаметр НКТ, внутренний
' dcas_mm       - диаметр эксплуатационной колонны в месте уставноки НКТ
' dintake_mm    - диаметр приемной сетки
' Ksep_d        - коэффициент сепарации
' WCT_perc
' Rp_m3m3
' Rsb_m3m3
' Pb_atma
' Tres_C
' gamma_oil
' gamma_wat
' gamma_gas
' Bob_m3m3
' PVTcorr
'
'
'
'
'
    
Dim gamma_wat As Double
gamma_wat = const_gamma_wat_default
Dim gamma_gas As Double
gamma_gas = const_gamma_gas_default
    Dim PVTcorr As PVT_CORRELATION
    PVTcorr = 0
    Dim rsb_m3m3 As Double
    rsb_m3m3 = Rp_m3m3
    Dim Angle_deg As Double
    Dim Qliq_scm3day As Double   ' дебит скважины на поверхности
    Dim Qmix_intake_m3day As Double, Qmix_dis_m3day   ' дебит ГЖС на приеме насоса после сепарации
    Dim Qmix_av_m3day As Double
    Dim PTintake, PTdischarge
    Dim Pintake_atma As Double, Pdischarge_atma As Double
    Dim Tintake_c As Double, Tdischarge_C As Double
    Dim GeoGradT_Cm As Double ' геотермальный градиент температуры
    Dim dPpump_fact_atma As Double    ' перепад давления развиваемый ЭЦН по факту
    Dim dPpump_teor_atma As Double    ' перепад давления ЭЦН по характеристике
    
    Dim PumpID
    Dim pump_eff As Double
    Dim Power_liq_W As Double
    Dim Power_pump_w As Double
    Dim dPower_protector_w As Double
    Dim dPower_gassep_w As Double
    Dim Power_shaft_w As Double
    Dim motor_eff As Double
    Dim Power_motor_w As Double
    
    Dim power_cable_w As Double
    Dim dpower_cable_w As Double
    Dim dpower_trans_w As Double
    Dim dpower_CS_w As Double
    
    Dim power_well_w As Double
    
    Dim Imotor_A As Double
    Dim dUcable_V As Double
    
    Dim degr As Double
    ' расчет потребления энергии
    GeoGradT_Cm = 0.03
    
    ' считаем какой угол наклона скважины
    Angle_deg = 90 - ArcCos((Hmes_m - Udl_m) / Hmes_m) / const_Pi * 180
    
    ' 1. Расчитываем дебит жидкости по продуктивности
    Qliq_scm3day = IPR_Ql_sm3Day(PI_m3dayatm, Pr_atma, Pwf_atma, WCT_perc, Pb_atma)
    
    ' 2. ищем давление на приеме насоса
    Tintake_c = Tres_C - GeoGradT_Cm * (Hmes_m - Hpump_m)
    PTintake = MF_dPpipe_atma(Hmes_m - Hpump_m, Pwf_atma, Qliq_scm3day, WCT_perc, Tres_C, Tintake_c, Angle_deg, dcas_mm, , gamma_gas, gamma_oil, gamma_wat, rsb_m3m3, Rp_m3m3, Pb_atma, Tres_C, _
                  Bob_m3m3, , PVTcorr:=PVTcorr)
    Pintake_atma = PTintake(0)
    Tintake_c = PTintake(1)
    ' 3. ищем или учитываем коэффициент сепарации
    
    ' 4. ищем давление на выкиде с учетом сепарации
    Tdischarge_C = Tintake_c
    PTdischarge = MF_dPpipe_atma(Hpump_m, Pbuf_atma, Qliq_scm3day, WCT_perc, Tdischarge_C, , Angle_deg, dtub_mm, , gamma_gas, gamma_oil, gamma_wat, rsb_m3m3, Rp_m3m3, Pb_atma, Tres_C, _
                  Bob_m3m3, , PVTcorr:=PVTcorr)
    Pdischarge_atma = PTdischarge(0)
    Tdischarge_C = PTdischarge(1)
    
    ' 5. ищем фактический перепад давления в насосе
    dPpump_fact_atma = Pdischarge_atma - Pintake_atma
    
    ' 6. ищем средний расход ГЖС через насос
    Qmix_intake_m3day = MF_Qmix_m3day(Qliq_scm3day, WCT_perc, Pintake_atma, Tintake_c, gamma_gas, gamma_oil, gamma_wat, rsb_m3m3, Rp_m3m3, Pb_atma, Tres_C, Bob_m3m3, , PVTcorr, _
                        Ksep_d, Pintake_atma, Tintake_c)
    Qmix_dis_m3day = MF_Qmix_m3day(Qliq_scm3day, WCT_perc, Pdischarge_atma, Tdischarge_C, gamma_gas, gamma_oil, gamma_wat, rsb_m3m3, Rp_m3m3, Pb_atma, Tres_C, Bob_m3m3, , PVTcorr, _
                        Ksep_d, Pintake_atma, Tintake_c)
    Qmix_av_m3day = (Qmix_intake_m3day + Qmix_dis_m3day) / 2
     
    ' 7. определяем насос
    PumpID = ESP_IDbyRate(ESP_Qnom_m3day)
    
    ' 8. определяем КПД насоса по характеристике для заданного среднего дебита
    pump_eff = ESP_eff_fr(Qmix_av_m3day, 1, esp_freq, PumpID)
    
    ' 9. ищем полезную мощность по факту для насоса
    Power_liq_W = Qmix_av_m3day * dPpump_fact_atma * const_convert_atma_Pa / const_conver_day_sec
    
    ' 10. ищем мощность потребляемую насосом с вала
    Power_pump_w = Power_liq_W / pump_eff
    
    ' 11 оценим мощности потребляемые гидрозащитой и газосепаратором и найдем мощность на валу
    dPower_protector_w = 400
    dPower_gassep_w = 500
    
    Power_shaft_w = Power_pump_w + dPower_protector_w + dPower_gassep_w
    
    ' 12 оценим мощность потребляемую двигателем
    
    motor_eff = 0.9   ' пока так - потом сделать надо расчет по характеристике
    
    Power_motor_w = Power_shaft_w / motor_eff
    
    ' 13 оценим потери в кабеле - для этого найдем примерно ток двигателя
    
    Imotor_A = Power_motor_w / 1.732050808 / ESP_U_V / ESP_cos_phi
    
    ' 14 по данным тока и сопротивления кабеля найдем падение напряжения в кабеле
    dUcable_V = Imotor_A * ESP_cable_R_Om
    
    ' 15 по падению напряжения оценим мощность рассеиваемую кабелем в тепло. учитываем 3 жилы. Тут учитывается полный ток и активный и реактивный
    
    dpower_cable_w = 3 * dUcable_V * Imotor_A
    power_cable_w = Power_motor_w + dpower_cable_w
    
    dpower_trans_w = 0.03 * power_cable_w
    dpower_CS_w = 0.03 * power_cable_w
    power_well_w = power_cable_w + dpower_trans_w + dpower_CS_w
    power_well_w = power_well_w / (1 - ESP_power_degr)
    
    degr = 1 - power_well_w / ESP_Power_W
    
    Well_Power_w = Array(power_well_w, degr)
     
End Function
